1. Modify the Client to Send a Special Message when the Search Text is Empty
In MainWindow.xaml.cs (client code), add logic to check if the search text is empty and send a specific message to the server indicating that all buttons should be visible.
private void SearchTextBox_TextChanged_1(object sender, TextChangedEventArgs e)
{
    try
    {
        if (SearchTextBox.Text != null)
        {
            SendLabel.Visibility = string.IsNullOrWhiteSpace(SearchTextBox.Text) ? Visibility.Visible : Visibility.Collapsed;
        }
        
        Logger.log.Info("No issues!");

        string message = SearchTextBox.Text;

        // Send a special message if the text box is empty
        if (string.IsNullOrWhiteSpace(message))
        {
            message = "SHOW_ALL";  // Special message to show all buttons
        }

        tcpClientHandler.SendMessage(message);
    }
    catch (Exception)
    {
        Logger.log.Error("Error!");
    }
}
2. Modify the Server Code to Handle the "SHOW_ALL" Message
In the server's TcpServer class (TcpServer.cs), modify the TcpServer_OnReceivedMessage method to check if the message is "SHOW_ALL". If it is, trigger the visibility of all buttons.

Modify the TcpServer_OnReceivedMessage method like this:
private void TcpServer_OnReceivedMessage(string message)
{
    Dispatcher.Invoke(() =>
    {
        if (message == "SHOW_ALL")
        {
            // Show all buttons when the "SHOW_ALL" message is received
            foreach (var button in btnDisease.Children.OfType<Button>())
            {
                button.Visibility = Visibility.Visible;
            }
        }
        else
        {
            // Otherwise, filter the buttons based on the search text
            textSearchBox.Text = message;
        }
    });
}
3. Modify the ButtonVisibilityConverter to Handle Visibility
The current ButtonVisibilityConverter is already set up to control visibility based on search text. However, we should ensure it works as expected even when the search text is empty and we want all buttons to be shown.

Ensure that your ButtonVisibilityConverter works correctly when the textSearchBox.Text is null or empty. It should always show all buttons when textSearchBox.Text is empty. If the textSearchBox.Text is populated, it will filter based on the content.
public object Convert(object value, Type targetType, object parameter, CultureInfo culture)
{
    if (value == null || string.IsNullOrWhiteSpace(value.ToString()))
    {
        // If the search text is empty, show all buttons
        return Visibility.Visible;
    }

    string searchText = value.ToString().ToLower();
    string buttonContent = parameter.ToString().ToLower();
    
    // Only show the button if the button content starts with the search text
    return buttonContent.StartsWith(searchText) ? Visibility.Visible : Visibility.Collapsed;
}
Summary of Changes:
Client (MainWindow.xaml.cs):

Send the "SHOW_ALL" message when the search textbox is empty.
Server (TcpServer.cs):

Handle the "SHOW_ALL" message and make all buttons visible when it is received.
Button Visibility (ButtonVisibilityConverter.cs):

Keep the converter as is, it will already work with the updated logic.
Testing:
Start the server and ensure it can receive messages.
Start the client and type something in the search box; buttons should filter based on the text.
Clear the search box, and the client should send the "SHOW_ALL" message, making all buttons visible on the server side.
This approach ensures that the server window will display all buttons when the search text is empty in the client window.



---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
